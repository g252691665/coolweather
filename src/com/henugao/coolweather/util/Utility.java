package com.henugao.coolweather.util;import java.text.SimpleDateFormat;import java.util.Date;import java.util.Locale;import org.json.JSONException;import org.json.JSONObject;import android.content.Context;import android.content.SharedPreferences;import android.content.SharedPreferences.Editor;import android.text.TextUtils;import com.henugao.coolweather.db.dao.CoolWeatherDB;import com.henugao.coolweather.model.City;import com.henugao.coolweather.model.County;import com.henugao.coolweather.model.Province;import com.henugao.coolweather.model.Weather;/** * 解析和处理服务器返回的数据 * @author henugao * */public class Utility {		/**	 * 解析和处理服务器返回的省级数据	 * @param coolWeatherDB	 * @param response	 * @return	 */	public static boolean handleProvincesResponse(CoolWeatherDB			coolWeatherDB			,String response) {		if(!TextUtils.isEmpty(response)) {			//1、如果用“.”作为分隔的话,必须是如下写法,String.split("\\."),这样才能正确的分隔开,不能用String.split(".");			//2、如果用“|”作为分隔的话,必须是如下写法,String.split("\\|"),这样才能正确的分隔开,不能用String.split("|");			//“.”和“|”都是转义字符,必须得加"\\";			//3、如果在一个字符串中有多个分隔符,可以用“|”作为连字符,比如,“acount=? and uu =? or n=?”,把三个都分隔出来,可以用String.split("and|or");			String[] allProvinces = response.split(",");			if (allProvinces !=null && allProvinces.length > 0) {				for (String province : allProvinces) {					String[] split = province.split("\\|");					Province pro = new Province();					pro.setProvinceCode(split[0]);					pro.setProvinceName(split[1]);					coolWeatherDB.saveProvince(pro);				}				return true;			}		}		return false;	}	/**	 * 	 * 解析和处理服务器返回的city数据	 * @param coolWeatherDB	 * @param response	 * @param provinceId	 * @return	 */	public static boolean handleCitiesResponse(CoolWeatherDB coolWeatherDB,			String response,int provinceId){		if (!TextUtils.isEmpty(response)) {			String[] allCities = response.split(",");			if (allCities !=null && allCities.length > 0 ) {				for (String city : allCities) {					String[] split = city.split("\\|");					City c = new City();					c.setCityCode(split[0]);					c.setCityName(split[1]);					c.setProvinceId(provinceId);					coolWeatherDB.saveCity(c);				}				return true;			}		}		return false;	}		/**	 * 	 * 解析和处理服务器返回的county数据	 * @param coolWeatherDB	 * @param response	 * @param cityId	 * @return	 */	public static boolean handleCountiesResponse(CoolWeatherDB coolWeatherDB,			String response,int cityId){		if (!TextUtils.isEmpty(response)) {			String[] allCounties = response.split(",");			if (allCounties !=null && allCounties.length > 0 ) {				for (String county : allCounties) {					String[] split = county.split("\\|");					County c = new County();					c.setCountyCode(split[0]);					c.setCountyName(split[1]);					c.setCityId(cityId);					coolWeatherDB.saveCounty(c);				}				return true;			}		}		return false;	}		/**	 * 解析服务器返回的Json数据,并将解析出来的数据存储在本地	 * @param context	 * @param response	 */	public static void handleWeatherResponse(Context context,String response) {		try {			Weather weather = new Weather();			JSONObject jsonObject = new JSONObject(response);			JSONObject weatherInfo = jsonObject.getJSONObject("weatherinfo");			String cityName = weatherInfo.getString("city");			weather.setCityName(cityName);			String weatherCode = weatherInfo.getString("cityid");			weather.setWeatherCode(weatherCode);			String temp1 = weatherInfo.getString("temp1");			weather.setTemp1(temp1);			String temp2 = weatherInfo.getString("temp2");			weather.setTemp2(temp2);			String weatherDesp = weatherInfo.getString("weather");			weather.setWeatherDesp(weatherDesp);			String publishTime = weatherInfo.getString("ptime");			weather.setPublishTime(publishTime);			saveWeatherInfo(context, weather);		} catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}	}		/**	 * 将服务器返回的天气信息存储在SharedPreferences文件中	 * @param context	 * @param weather	 */	public static void saveWeatherInfo(Context context,Weather weather) {		SimpleDateFormat sdf = new SimpleDateFormat("yyyy年M月d日", Locale.CHINA);		SharedPreferences sp = context.getSharedPreferences("weather", 0);		Editor edit = sp.edit();		edit.putString("city_name", weather.getCityName());		edit.putString("weather_code", weather.getWeatherCode());		edit.putString("temp1", weather.getTemp1());		edit.putString("temp2", weather.getTemp2());		edit.putString("weather_desp", weather.getWeatherDesp());		edit.putString("publish_time", weather.getPublishTime());		edit.putString("current_date", sdf.format(new Date()));		edit.commit();	}}